#include<iostream.h>
#include<conio.h>
using namespace std; 
  
// creating a structure of a process/students
struct process { 
    int processno; 
    int AT; 
    int BT; 
  
    // for backup purpose to print in last 
    int BTbackup; 
    int WT; 
    int TAT; 
    int CT; 
}; 
  
// creating a structe of 3  students
struct process p[3]; 
  
// variable to find the total time 
int totaltime = 0; 
int prefinaltotal = 0; 
// comparator function for sort() 
bool compare(process p1, process p2) 
{ 
    // compare the processno of two processes 
    return p1.processno < p2.processno; 
} 

int findlargest(int at) 
{ 
    int max = 0, i; 
    for (i = 0; i <=2; i++) { 
        if (p[i].AT <= at) { 
            if (p[i].BT > p[max].BT) 
                max = i; 
        } 
    } 
  
    // returning the index of the process having the largest BT 
    return max; 
} 
  
// function to find the completion time of each process 
int findCT() 
{ 
  
    int index; 
    int flag = 0; 
    int i = p[0].AT; 
    while (1) { 
        if (i <= 2) { 
            index = findlargest(i); 
        } 
  
        else
            index = findlargest(2); 
        cout << "Process executing at time " << totaltime 
             << " is: P" << index + 1 << "\t"; 
  
        p[index].BT -= 1; 
        totaltime += 1; 
        i++; 
  
        if (p[index].BT == 0) { 
            p[index].CT = totaltime; 
            cout << " Process P" << p[index].processno  
                 << " is completed at " << totaltime; 
        } 
        cout << endl; 
  
        // loop termination condition 
        if (totaltime == prefinaltotal) 
            break; 
    } 
} 
